{
  "permissions": {
    "allow": [
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(npm install:*)",
      "Bash(npx prisma:*)",
      "Bash(docker-compose exec app npx prisma migrate:*)",
      "Bash(docker-compose exec:*)",
      "Bash(npm run build:*)",
      "Bash(npm start)",
      "Bash(NODE_ENV=development npm start)",
      "Bash(npx ts-node:*)",
      "Bash(curl:*)",
      "Bash(pkill:*)",
      "Bash(npm run dev:*)",
      "Bash(node test-endpoints.js)",
      "Bash(node:*)",
      "Bash(docker-compose restart:*)",
      "Bash(docker-compose build:*)",
      "Bash(docker-compose up:*)",
      "Bash(docker logs:*)",
      "Bash(grep:*)",
      "Bash(git push:*)",
      "Bash(git commit:*)",
      "Bash(rm:*)",
      "Bash(true)",
      "Bash(npm run:*)",
      "Bash(psql:*)",
      "Bash(git checkout:*)",
      "Bash(npx tsc:*)",
      "Bash(npx tsc:*)",
      "Bash(find:*)",
      "Bash(git pull:*)",
      "Bash(find:*)",
      "Bash(npx next build:*)",
      "Bash(ls:*)",
      "Bash(npx typescript:*)",
      "Bash(ls:*)",
      "Bash(env)",
      "Bash(unset TS_NODE_PROJECT)",
      "Bash(mkdir:*)",
      "Bash(touch:*)",
      "Bash(npm test:*)",
      "Bash(npm test:*)",
      "Bash(npx playwright test:*)",
      "Bash(git stash:*)",
      "Bash(npx eslint:*)",
      "Bash(mv:*)",
      "Bash(docker buildx build:*)",
      "Bash(docker:*)",
      "Bash(git restore:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(npx turbo run typecheck:*)",
      "Bash(npx turbo run format:*)",
      "Bash(NODE_ENV=test npm test -- --testNamePattern=\"should pass\" --passWithNoTests)",
      "Bash(NODE_ENV=test npm run test -- src/__tests__/env-setup.ts)",
      "Bash(NODE_ENV=test npm test -- src/__tests__/helpers/test-app.ts)",
      "Bash(NODE_ENV=test npm test -- --passWithNoTests --maxWorkers=1)",
      "Bash(npx turbo run:*)",
      "Bash(sed:*)",
      "Bash(npx prettier:*)",
      "Bash(NODE_ENV=test SUPABASE_URL=https://test.supabase.co SUPABASE_ANON_KEY=test-anon-key DISABLE_RATE_LIMITING=true node -e \"\nconst request = require(''supertest'');\nconst { createTestApp } = require(''./dist/__tests__/helpers/test-app'');\n\nasync function testRegistration() {\n  try {\n    console.log(''NODE_ENV:'', process.env.NODE_ENV);\n    console.log(''DISABLE_RATE_LIMITING:'', process.env.DISABLE_RATE_LIMITING);\n    \n    const app = await createTestApp();\n    console.log(''Test app created successfully'');\n    \n    // Try registration\n    const response = await request(app)\n      .post(''/api/auth/register'')\n      .send({\n        username: \\`test_user_${Date.now()}\\`,\n        email: \\`test_${Date.now()}@example.com\\`,\n        password: ''WerewolfPack123!'',\n        display_name: ''Test User''\n      });\n    \n    console.log(''Registration Status:'', response.status);\n    console.log(''Response Body:'', response.body);\n  } catch (error) {\n    console.error(''Error:'', error.message);\n  }\n}\n\ntestRegistration();\n\")",
      "Bash(cp:*)",
      "Bash(for i in {1..3})",
      "Bash(do echo \"Test run $i:\")",
      "Bash(done)",
      "Bash(for i in {1..5})",
      "Bash(gh pr create:*)",
      "Bash(gh pr close:*)",
      "Bash(git cherry-pick:*)",
      "Bash(gh pr view:*)",
      "Bash(gh pr checks:*)",
      "Bash(npx next lint:*)",
      "Bash(git rm:*)",
      "Bash(turbo run:*)"
    ],
    "deny": []
  }
}