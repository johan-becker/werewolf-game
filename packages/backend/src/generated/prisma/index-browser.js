
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.13.0
 * Query Engine version: 361e86d0ea4987e9f53a565309b3eed797a6bcbd
 */
Prisma.prismaVersion = {
  client: "6.13.0",
  engine: "361e86d0ea4987e9f53a565309b3eed797a6bcbd"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.GameScalarFieldEnum = {
  id: 'id',
  name: 'name',
  code: 'code',
  status: 'status',
  phase: 'phase',
  night_phase: 'night_phase',
  day_number: 'day_number',
  max_players: 'max_players',
  current_players: 'current_players',
  game_settings: 'game_settings',
  winner: 'winner',
  creator_id: 'creator_id',
  created_at: 'created_at',
  started_at: 'started_at',
  finished_at: 'finished_at',
  updated_at: 'updated_at'
};

exports.Prisma.PlayerScalarFieldEnum = {
  user_id: 'user_id',
  game_id: 'game_id',
  role: 'role',
  team: 'team',
  is_alive: 'is_alive',
  is_host: 'is_host',
  joined_at: 'joined_at',
  eliminated_at: 'eliminated_at',
  votes_cast: 'votes_cast',
  lover_id: 'lover_id',
  has_heal_potion: 'has_heal_potion',
  has_poison_potion: 'has_poison_potion',
  can_shoot: 'can_shoot',
  has_spied: 'has_spied',
  spy_risk: 'spy_risk',
  is_protected: 'is_protected'
};

exports.Prisma.GameLogScalarFieldEnum = {
  id: 'id',
  game_id: 'game_id',
  user_id: 'user_id',
  player_id: 'player_id',
  action: 'action',
  details: 'details',
  phase: 'phase',
  day_number: 'day_number',
  created_at: 'created_at'
};

exports.Prisma.ChatMessageScalarFieldEnum = {
  id: 'id',
  game_id: 'game_id',
  user_id: 'user_id',
  channel: 'channel',
  type: 'type',
  content: 'content',
  mentions: 'mentions',
  edited: 'edited',
  edited_at: 'edited_at',
  created_at: 'created_at'
};

exports.Prisma.GameRoleConfigScalarFieldEnum = {
  id: 'id',
  game_id: 'game_id',
  villagers: 'villagers',
  werewolves: 'werewolves',
  seer: 'seer',
  witch: 'witch',
  hunter: 'hunter',
  cupid: 'cupid',
  little_girl: 'little_girl',
  created_by: 'created_by',
  created_at: 'created_at'
};

exports.Prisma.NightActionScalarFieldEnum = {
  id: 'id',
  game_id: 'game_id',
  player_id: 'player_id',
  action_type: 'action_type',
  target_id: 'target_id',
  second_target_id: 'second_target_id',
  phase: 'phase',
  day_number: 'day_number',
  resolved: 'resolved',
  success: 'success',
  result_message: 'result_message',
  revealed_info: 'revealed_info',
  effects: 'effects',
  created_at: 'created_at',
  resolved_at: 'resolved_at'
};

exports.Prisma.ProfileScalarFieldEnum = {
  id: 'id',
  username: 'username',
  full_name: 'full_name',
  avatar_url: 'avatar_url',
  updated_at: 'updated_at',
  created_at: 'created_at',
  games_played: 'games_played',
  games_won: 'games_won'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.GameStatus = exports.$Enums.GameStatus = {
  WAITING: 'WAITING',
  IN_PROGRESS: 'IN_PROGRESS',
  FINISHED: 'FINISHED'
};

exports.GamePhase = exports.$Enums.GamePhase = {
  DAY: 'DAY',
  NIGHT: 'NIGHT'
};

exports.NightPhase = exports.$Enums.NightPhase = {
  CUPID_PHASE: 'CUPID_PHASE',
  SEER_PHASE: 'SEER_PHASE',
  WEREWOLF_PHASE: 'WEREWOLF_PHASE',
  WITCH_PHASE: 'WITCH_PHASE'
};

exports.WerewolfRole = exports.$Enums.WerewolfRole = {
  VILLAGER: 'VILLAGER',
  SEER: 'SEER',
  WITCH: 'WITCH',
  HUNTER: 'HUNTER',
  CUPID: 'CUPID',
  LITTLE_GIRL: 'LITTLE_GIRL',
  WEREWOLF: 'WEREWOLF'
};

exports.Team = exports.$Enums.Team = {
  VILLAGE: 'VILLAGE',
  WEREWOLF: 'WEREWOLF',
  LOVERS: 'LOVERS'
};

exports.ChatChannel = exports.$Enums.ChatChannel = {
  LOBBY: 'LOBBY',
  DAY: 'DAY',
  NIGHT: 'NIGHT',
  DEAD: 'DEAD',
  SYSTEM: 'SYSTEM'
};

exports.MessageType = exports.$Enums.MessageType = {
  TEXT: 'TEXT',
  SYSTEM: 'SYSTEM',
  JOIN: 'JOIN',
  LEAVE: 'LEAVE',
  DEATH: 'DEATH',
  ROLE_REVEAL: 'ROLE_REVEAL'
};

exports.ActionType = exports.$Enums.ActionType = {
  SEER_INVESTIGATE: 'SEER_INVESTIGATE',
  WEREWOLF_KILL: 'WEREWOLF_KILL',
  WITCH_HEAL: 'WITCH_HEAL',
  WITCH_POISON: 'WITCH_POISON',
  CUPID_LINK: 'CUPID_LINK',
  LITTLE_GIRL_SPY: 'LITTLE_GIRL_SPY',
  VILLAGE_VOTE: 'VILLAGE_VOTE',
  HUNTER_SHOOT: 'HUNTER_SHOOT',
  NO_ACTION: 'NO_ACTION'
};

exports.Prisma.ModelName = {
  Game: 'Game',
  Player: 'Player',
  GameLog: 'GameLog',
  ChatMessage: 'ChatMessage',
  GameRoleConfig: 'GameRoleConfig',
  NightAction: 'NightAction',
  Profile: 'Profile'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
