version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: werewolf-postgres
    environment:
      POSTGRES_DB: werewolf_game
      POSTGRES_USER: werewolf_user
      POSTGRES_PASSWORD: werewolf_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./packages/backend/prisma/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U werewolf_user -d werewolf_game"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: werewolf-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      dockerfile: packages/backend/Dockerfile.dev
    container_name: werewolf-backend
    ports:
      - "3000:3000"     # HTTP API
      - "3001:3001"     # WebSocket
    environment:
      - NODE_ENV=development
      - PORT=3000
      - WS_PORT=3001
      - DATABASE_URL=postgresql://werewolf_user:werewolf_password@postgres:5432/werewolf_game
      - REDIS_URL=redis://redis:6379
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./packages/backend:/app
      - /app/node_modules
      - /app/dist
    command: npm run dev

  # Frontend Next.js App
  frontend:
    build:
      context: .
      dockerfile: packages/frontend/Dockerfile.dev
    container_name: werewolf-frontend
    ports:
      - "3002:3000"     # Frontend on port 3002 to avoid conflicts
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3000
      - NEXT_PUBLIC_WS_URL=http://localhost:3001
    depends_on:
      - backend
    volumes:
      - ./packages/frontend:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev

volumes:
  postgres_data:
  redis_data: