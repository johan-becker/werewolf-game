name: CI Pipeline

on:
  push:
    branches: [main, develop, fix/*]
  pull_request:
    branches: [main, develop]

jobs:
  lint-and-typecheck:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --workspaces --include-workspace-root

      - name: Lint code
        run: npx turbo run lint

      - name: Type check
        run: npx turbo run typecheck

      - name: Format check
        run: npx turbo run format:check

  test-backend:
    name: Backend Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: werewolf_game_test
          POSTGRES_USER: werewolf_user
          POSTGRES_PASSWORD: werewolf_password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --workspaces --include-workspace-root

      - name: Run Prisma migrations
        run: |
          npm run db:generate --workspace=packages/backend
          npx prisma migrate deploy --schema=packages/backend/prisma/schema.prisma
        env:
          DATABASE_URL: postgresql://werewolf_user:werewolf_password@localhost:5432/werewolf_game_test

      - name: Run backend tests
        run: npm run test --workspace=packages/backend
        env:
          NODE_ENV: test
          DATABASE_URL: postgresql://werewolf_user:werewolf_password@localhost:5432/werewolf_game_test
          REDIS_URL: redis://localhost:6379
          JWT_SECRET: test-jwt-secret-that-is-at-least-32-characters-long-for-testing
          JWT_REFRESH_SECRET: test-jwt-refresh-secret-that-is-at-least-32-characters-long-for-testing
          SESSION_SECRET: test-session-secret-that-is-at-least-32-characters-long-for-testing
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}

  test-frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --workspaces --include-workspace-root

      - name: Run frontend tests
        run: npm run test --workspace=packages/frontend
        env:
          NODE_ENV: test

  build:
    name: Build Applications
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, test-backend, test-frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --workspaces --include-workspace-root

      - name: Build all packages
        run: npx turbo run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            packages/backend/dist/
            packages/frontend/.next/
            packages/shared/dist/
          retention-days: 7

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --workspaces --include-workspace-root

      - name: Run security audit
        run: npm audit --audit-level moderate

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [build, security-scan]
    if: github.ref == 'refs/heads/develop'
    environment: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Deploy to staging
        run: |
          echo "Deploying to staging environment..."
          # Add your staging deployment commands here

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build, security-scan]
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Deploy to production
        run: |
          echo "Deploying to production environment..."
          # Add your production deployment commands here